{
    "id": "2ea05fee840f4065496abb9314526422",
    "name": "Entertainment Express",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "9174df7e608b8fd8d92e0287e8e7dda8",
            "name": "Get Viewers by City.",
            "url": "httpsee.iva-api.com\/\/Analytics\/City\/",
            "description": "No required parameters, DateValue defaults to Today..",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "bdc9d5ce2291a9b011ec4f6b225b52f7",
            "name": "Get Viewers by Country.",
            "url": "httpsee.iva-api.com\/\/Analytics\/Country\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "9edab865d114a3e26f1d3bde6586f4c5",
            "name": "GetAnalyticEngagementActions",
            "url": "httpsee.iva-api.com\/\/Analytics\/EngagementActions\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "77c35e60aedc9579e87bb7587f3327dd",
            "name": "Get View count by Frequency.",
            "url": "httpsee.iva-api.com\/\/Analytics\/EngagementTimes\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f0de67ef6ce628cdcec4136b38450cc6",
            "name": "Get GBUsage by Customer ID.",
            "url": "httpsee.iva-api.com\/\/Analytics\/GBUsage\/",
            "description": "Requires a valid Customer ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Month",
                    "description": "Report month",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Year",
                    "description": "Report year",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "c4a474f2c218228fef45ae2d56ad354f",
            "name": "Get Most Active Visitors by IP.",
            "url": "httpsee.iva-api.com\/\/Analytics\/MostActive\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "633195303cb7fc610f7857b052798e99",
            "name": "Get Viewers by Platform Hardware.",
            "url": "httpsee.iva-api.com\/\/Analytics\/PlatformHardware\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "7b7a781e01abf8d5e3e40826ef928287",
            "name": "Get Viewers by Platform OS.",
            "url": "httpsee.iva-api.com\/\/Analytics\/PlatformOS\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "19c7f984b8dd2e91024c1cf48435a07b",
            "name": "Get Most Recent Visitors by Time.",
            "url": "httpsee.iva-api.com\/\/Analytics\/RecentVisitors\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "d7a850ef5111e95185d2b00fb0dc6b13",
            "name": "Get Summary by Customer ID.",
            "url": "httpsee.iva-api.com\/\/Analytics\/Summary\/",
            "description": "Requires a valid Customer ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5a2d01941a8d300490bd9650cae317b0",
            "name": "Get Title Report by PublishedID.",
            "url": "httpsee.iva-api.com\/\/Analytics\/TitleReport\/",
            "description": "Requires a valid published ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "PublishedId",
                    "description": "Title published ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f79e947c41fefd75ed580192fc2a8c18",
            "name": "Get Views by Video.",
            "url": "httpsee.iva-api.com\/\/Analytics\/VideoLog\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "883201881903b87299e32554de0f7b6b",
            "name": "Get viewers by Day.",
            "url": "httpsee.iva-api.com\/\/Analytics\/Viewers\/",
            "description": "Optional DateValue for length of report.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f42b7c1b72c6095b7570aee84416fdb7",
            "name": "Get views by Day.",
            "url": "httpsee.iva-api.com\/\/Analytics\/Views\/",
            "description": "Optional DateValue for length of report.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "b4eece473ee38d0ea306de1367aed20e",
            "name": "Get Viewers by Web Browser.",
            "url": "httpsee.iva-api.com\/\/Analytics\/WebBrowsers\/",
            "description": "No required parameters, DateValue defaults to Today.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DateValue",
                    "description": "Days spanned by report",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Limit",
                    "description": "Number of records returned from top of response",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "dbf5a995e887588e28080a2994304336",
            "name": "Returns list of unique EpisodeId changes greater than or equal to date (UTC)",
            "url": "httpsee.iva-api.com\/\/Changes\/Episodes\/History\/",
            "description": "For each updated episode ID, pull the full episode data for that ID and update.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "dc31a2125d11f219ef782a0c547f3398",
            "name": "Returns list of unique EpisodeId and Entity changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/Episodes\/HistoryWithEntity\/",
            "description": "Lists each episode ID that has changed as well as the entity in the object that changed.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f1c994d830727639b8135957699a2db4",
            "name": "Returns list of unique MovieId changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/Movies\/History\/",
            "description": "Use to get the ID's of the movies that have been added or changed and use \/Movies\/{ID} to get back the object with the updated data and replace in your database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "71864bb8e6f09f09cf301d2baf41f1b6",
            "name": "\nReturns list of unique MovieId and Entity changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/Movies\/HistoryWithEntity\/",
            "description": "Same as \/Changes\/Movies\/History but with the specific entities that have changed inside the MovieResponse.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "a2db238ca789b58f6d04349494e2a133",
            "name": "Returns list of unique PersonId changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/People\/History\/",
            "description": "Requires a valid Date.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "1c944f9a5546f07cf7a9801d4439657d",
            "name": "Returns list of unique PersonId and Entity changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/People\/HistoryWithEntity\/",
            "description": "Requires a valid Date.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "60174aa6f68a668f1628fe6a95db0a1f",
            "name": "Returns list of unique SeasonId changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/Seasons\/History\/",
            "description": "Use if you want to check for specific updates to season records.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f3d3e700f98b21633157d7693173dcda",
            "name": "Returns list of unique SeasonId and Entity changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/Seasons\/HistoryWithEntity\/",
            "description": "Returns list of new or changed SeasonIds with the entity that has changed.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "b5a016407dbd624a748e3edaeb3cf11f",
            "name": "Returns list of unique ShowId changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/Shows\/History\/",
            "description": "All new and updated shows from requested date and time.  When a record gets updated, use the ID to get the full show object and replace the data in your cache.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "1defc351a209e5f60f15da3c0908d818",
            "name": "Returns list of unique ShowId and Entity changes greater than or equal to date (UTC).",
            "url": "httpsee.iva-api.com\/\/Changes\/Shows\/HistoryWithEntity\/",
            "description": "Returns a list of ShowId and entity of any show that has been updated.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Date",
                    "description": "Starting date <= when record has changed (Maximum of 30 days back). ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "2cca8747efd3a9e6a619e994d36ece7e",
            "name": "Returns list of movies based on the weekend box office revenue.",
            "url": "httpsee.iva-api.com\/\/Charts\/Movies\/Boxoffice",
            "description": "Returns top 10 box office movies.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f70ac73f719aef397b07b8be0b62f1e4",
            "name": "Returns list of Most Anticipated movies based on IVA data.",
            "url": "httpsee.iva-api.com\/\/Charts\/Movies\/MostAnticipated",
            "description": "Requires Skip and Take. Maximum page size is 100.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "298ff429bc34bf7aa1ddf9f0df82d9fc",
            "name": "Returns list of popular movies.",
            "url": "httpsee.iva-api.com\/\/Charts\/Movies\/Popular",
            "description": "Requires Skip and Take. Maximum page size is 100.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "eded5bab2046a9284e745cad83d0dad5",
            "name": "Returns list of popular celebrities based on IVA data.",
            "url": "httpsee.iva-api.com\/\/Charts\/People\/Popular",
            "description": "Requires Skip and Take. Maximum page size is 100.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "efc6345e501c40ea0fc4f2d545a23f59",
            "name": "Returns a list of shows based on popularity.",
            "url": "httpsee.iva-api.com\/\/Charts\/Shows\/Popular",
            "description": "Requires Skip and Take. Maximum page size is 100.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "82194dd51dab4d92f8e8337d38c704af",
            "name": "Paged list of companies.",
            "url": "httpsee.iva-api.com\/\/Common\/Companies\/",
            "description": "Companies are listed in a movie, show, or game response as those whom are involved with the program.  EX: Universal Pictures.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "8f7628fde37e90044ad435122257fc66",
            "name": "Returns a list of countries.",
            "url": "httpsee.iva-api.com\/\/Common\/Countries\/",
            "description": "List of Countries, ISO codes and Country IDs used throughout the API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5fd2feeb2aed8acb3a50f70c227ac162",
            "name": "List of image types contained in the database.",
            "url": "httpsee.iva-api.com\/\/Common\/ImageTypes\/",
            "description": "A list of image types available in the IVA database. **EX: Poster**",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "2ecf3789d39501643a5f485c0f8799ff",
            "name": "Gets all languages.",
            "url": "httpsee.iva-api.com\/\/Common\/Languages\/",
            "description": "Returns a list of languages used in the API as well as the ISO code and language ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "d4b004f177c0953e4fc581297a8cdb02",
            "name": "Gets all tags.",
            "url": "httpsee.iva-api.com\/\/Common\/Tags\/",
            "description": "Paged list of all tags used in the API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "431a04513d2e0dc6f94641a506e23c4e",
            "name": "Gets all VideoTypes.",
            "url": "httpsee.iva-api.com\/\/Common\/VideoTypes\/",
            "description": "Returns a list of the types of videos that can be associated to a title.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "652616f09b476d6f74a220bea8c2f7d8",
            "name": "Returns list of all MovieId, Gracenote Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/GracenoteMovie",
            "description": "Not accessible with a Demo account.  **Special permissions needed** for access to this operation.  Contact [Sales](mailto:sales@internetvideoarchive.com).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "a215d678b20f037404c3ad4045a1b0c5",
            "name": "Returns list of all ShowId, Gracenote Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/GracenoteShow",
            "description": "Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "d7509fe966c586f483b286d310e0c5d5",
            "name": "Returns list of all MovieId, IMDB Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/ImdbMovie",
            "description": "Ingest this ID map to create connections between the objects in your existing database with an IMDB ID to the IVA Movie objects.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f96b9ac97ab1762c4d4175764bfe8984",
            "name": "Returns list of all MovieId, Tmdb Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/ImdbShow",
            "description": "ngest this ID map to create connections between the objects in your existing database with an IMDB ID to the IVA Show objects.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "b372ea129462b12b5e5153e088536a4d",
            "name": "Returns list of all MovieId, Tivo Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/RoviMovie",
            "description": "Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "fa6cdc5cba093ae1d9af78515dfd8eaf",
            "name": "Returns list of all ShowId, Tivo Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/RoviShow",
            "description": "Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "e3261715e51f3cf03ea0b42aaa86bda1",
            "name": "Returns list of all MovieId, Tmdb Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/TmdbMovie",
            "description": "Use to link a TMDB ID to an IVA Movie ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "376a3cb38f8c54129dd8b3162888cf0c",
            "name": "Returns list of all ShowId, TMDB Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/TmdbShow",
            "description": "Use to link a TMDB ID to an IVA Show ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "b3e188703a73fbdb4eb46a86e66f0f21",
            "name": "Returns list of all MovieId, Webedia Id pairs.",
            "url": "httpsee.iva-api.com\/\/ExternalIds\/Webedia",
            "description": "Not accessible with a Demo account. **Special permissions needed** for access to this operation. Contact [Sales](mailto:sales@internetvideoarchive.com).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "6d4b6af4b299fcfdf56459ccb91df3cf",
            "name": "Find a movie using third party ID.",
            "url": "httpsee.iva-api.com\/\/Find\/Movie\/",
            "description": "Use FindMovie with a third party ID like IMDB, TMDB, Gracenote, Tivo, etc. to find the corresponding movie in the IVA database.  For a full list of supported ID types see \/Movies\/AlternateIdTypes. \n\n\n\n`Recommendation: Use with small data sets or for a proof of concept. `",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "IdType",
                    "description": "Required third party ID type of MovieAlternateId.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f643c64c47ed5fe80e86bfe3ce221370",
            "name": "Find a TV show using a third party ID.",
            "url": "httpsee.iva-api.com\/\/Find\/Show\/",
            "description": "Use FindShow with a third party ID like IMDB, TMDB, Gracenote, Tivo, etc. to find the corresponding TV show in the IVA database. For a full list of supported ID types see \/Shows\/AlternateIdTypes. `Recommendation: Use with small data sets or for a proof of concept. `",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "IdType",
                    "description": "Required third party ID type of MovieAlternateId.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "4a966dcc9d3d62eaf573e048dab11ab1",
            "name": "Get GoWatchIt Episode Availability.",
            "url": "httpsee.iva-api.com\/\/GoWatchIt\/Episodes\/{Id}\/Availabilities",
            "description": "Returns GoWatchit episode availability by Entertainment Episode ID. Special permission is required to access this endpoint. ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiKey",
                    "description": "Required GoWatchIt API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "c37ed30da03aa6431cf3a4c659a7fef4",
            "name": "Get GoWatchIt Movie Availability.",
            "url": "httpsee.iva-api.com\/\/GoWatchIt\/Movies\/{Id}\/Availabilities",
            "description": "Returns GoWatchIt movie availability by Entertainment Movie ID.  Special permission is required to access this endpoint.  Contact [Sales](mailto:Sales@InternetVideoArchive.com) for more information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiKey",
                    "description": "Required GoWatchIt API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "1eed5e197a9280b854c791d584c1ecd5",
            "name": "Get GoWatchIt Season Availability.",
            "url": "httpsee.iva-api.com\/\/GoWatchIt\/Seasons\/{Id}\/Availabilities",
            "description": "Returns GoWatchIt season availability by Entertainment Season ID.  Special permission is required to access this endpoint.  Contact [Sales](mailto:Sales@InternetVideoArchive.com) for more information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiKey",
                    "description": "Required GoWatchIt API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "0bcbeabba900ae9d94b961c50d75e88c",
            "name": "Get GoWatchItShow Availability.",
            "url": "httpsee.iva-api.com\/\/GoWatchIt\/Shows\/{Id}\/Availabilities",
            "description": "Returns GoWatchIt show availability by Entertainment Show ID.  Special permission is required to access this endpoint. Please contact [Sales](mailto:Sales@InternetVideoArchive.com) for more information.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ApiKey",
                    "description": "Required GoWatchIt API key.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "1ec8d9a7498ad234807fa22247a39623",
            "name": "Returns a list of batch image responses links based on filepath.",
            "url": "httpsee.iva-api.com\/\/Images\/Batch",
            "description": "Requires a list filepath.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "FilePath",
                    "description": "List of Filepaths.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "body",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "89417fa82ff20179a49f7e7eab3507b7",
            "name": "Returns a list of screen capture responses.",
            "url": "httpsee.iva-api.com\/\/Images\/ScreenCaptures\/Batch",
            "description": "Requires a list of filepaths.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "FilePath",
                    "description": "List of Filepaths.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "body",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "1415b16cc85dd2416b16411a4b1ce840",
            "name": "Redirect to a screen capture based on filepath.",
            "url": "httpsee.iva-api.com\/\/Images\/ScreenCaptures\/Redirect",
            "description": "Requires a valid filepath of a video asset screen capture.  \n\n`Note: The swagger U\/I does not support redirects.`",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "FilePath",
                    "description": "List of Filepaths.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Redirect",
                    "description": "Redirect to the image. Default = true",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5faba3aa4fcbdfcde2239a8b62460e40",
            "name": "Redirect to an image based on filepath.",
            "url": "httpsee.iva-api.com\/\/Images\/{FilePath}\/Redirect",
            "description": "Images should be downloaded and stored on the client server. Use \/Common\/ImageTypes to see a list of available image types.  \n\n\n`Note: The swagger U\/I does not support redirects.`",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "FilePath",
                    "description": "Filepath of Image.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Redirect",
                    "description": "Redirect to the image. Default = true",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5101df24337851afe10d319af68a36d7",
            "name": "Get Metacritic Movie information.",
            "url": "httpsee.iva-api.com\/\/Metacritic\/Movie\/{Id}",
            "description": "Returns Metacritic Movie information by Entertainment Movie ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "ac8d3cd5f09444a1ce4a21c75ad4ccf0",
            "name": "Get Metacritic TV information.",
            "url": "httpsee.iva-api.com\/\/Metacritic\/TV\/{Id}",
            "description": "Returns Metacritic TV information by Entertainment Show ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SeasonNumber",
                    "description": "Number of season.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "c860160de2e84f15a9fda11bfbff82d8",
            "name": "Get MovieTickets Cultures.",
            "url": "httpsee.iva-api.com\/\/MovieTickets\/Cultures",
            "description": "Returns MovieTickets Cultures.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "84b7a697620ce6087c6c3208d3b9189e",
            "name": "Get MovieTickets Movies releasing soon.",
            "url": "httpsee.iva-api.com\/\/MovieTickets\/Movies\/ComingSoon",
            "description": "Returns MovieTickets Movies releasing soon.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Culture",
                    "description": "Culture to retrieve response. Default en-us.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PageNumber",
                    "description": "Page number for paging results. Used in conjunction with PageSize.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PageSize",
                    "description": "Limits the total items returned. Maximum of 100 per request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "dc292ce55d0b6b7056bd9e6da659754b",
            "name": "Get MovieTickets Movies in theaters.",
            "url": "httpsee.iva-api.com\/\/MovieTickets\/Movies\/NowPlaying",
            "description": "Returns MovieTickets Movies currently in theaters.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Culture",
                    "description": "Culture to retrieve response. Default en-us.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PageNumber",
                    "description": "Page number for paging results. Used in conjunction with PageSize.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PageSize",
                    "description": "Limits the total items returned. Maximum of 100 per request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "68e2e480297403ec1288f0d7c9408b4f",
            "name": "Get MovieTickets Performances.",
            "url": "httpsee.iva-api.com\/\/MovieTickets\/Performances",
            "description": "Returns MovieTickets Performances by MovieTickets Theater ID, Entertainment Movie ID, and ScheduleDate.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Culture",
                    "description": "Culture to retrieve response. Default en-us.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ScheduleDate",
                    "description": "Date to get scheduled performances.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TheaterIds",
                    "description": "Required ID\/IDs of MovieTickets Theaters. Comma-seperated for multiple.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EntertainmentMovieIds",
                    "description": "Required ID\/IDs of Entertainment Movies. Comma-seperated for multiple.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "197ee6cf91e0b56500e0c2059aa482b8",
            "name": "Get MovieTickets Theaters.",
            "url": "httpsee.iva-api.com\/\/MovieTickets\/Theaters",
            "description": "Returns MovieTickets Theaters by postal code.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Culture",
                    "description": "Culture to retrieve response. Default en-us.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PostalCode",
                    "description": "Postal code. Longitude\/Latitude not required if passed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Longitude",
                    "description": "Longitude coordinate. Used in conjunction with Latitude. Postal code not required if passed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Latitude",
                    "description": "Latitude coordinate. Used in conjunction with Longitude. Postal code not required if passed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Distance",
                    "description": "Required distaince in meters.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PageNumber",
                    "description": "Page number for paging results. Used in conjunction with PageSize.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PageSize",
                    "description": "Limits the total items returned. Maximum of 100 per request.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "2a163025a65dbdb4d477cf7ab02129e4",
            "name": "Returns a paged list of all movies.",
            "url": "httpsee.iva-api.com\/\/Movies\/All",
            "description": "By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.   \n\n\n`Subscriptions with \"Limited\" data will only be able to include basic title information and Videos.`  \n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "ac101f596b1bd1f909998d4ff9fc1c77",
            "name": "Returns all MovieAlternateIdTypes.",
            "url": "httpsee.iva-api.com\/\/Movies\/AlternateIdTypes",
            "description": "Movie alternate ID types refer to 3rd party IDs that IVA matches its own movie IDs.  **EX: IMDB, TMDB**.  \n\n`Use to get the Id of the ID type to use with \/Find\/Movie.`",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "2a8630b2327cb25e5aab55499823f1eb",
            "name": "Returns list of all Movies coming to US Theaters.",
            "url": "httpsee.iva-api.com\/\/Movies\/ComingSoon\/",
            "description": "Requires Skip and Take. Maximum page size is 10.\n\nBy default the API will only return basic title information.\nAdditional objects can be included by passing the object in the Includes parameter in a comma separated list. ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "0e3d1c30320a90c6748889a41e293f01",
            "name": "Returns list of all Movies currently in US Theaters.",
            "url": "httpsee.iva-api.com\/\/Movies\/InTheaters\/",
            "description": "Requires Skip and Take. Maximum page size is 10.\n\nBy default the API will only return basic title information.\nAdditional objects can be included by passing the object in the Includes parameter in a comma separated list. ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "6fb6aaf45bd5a42406be84130ef95279",
            "name": "Perform a match to Entertainment using Title, Year, Cast and Director. Returns best match and score for the match.",
            "url": "httpsee.iva-api.com\/\/Movies\/Match\/",
            "description": "Use to match IVA movie data to another data source using title, year, cast etc.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Title",
                    "description": "Title of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AlternateTitles",
                    "description": "Alternate Titles of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Year",
                    "description": "Report year",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Cast",
                    "description": "Cast members of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Directors",
                    "description": "Directors of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StringDistance",
                    "description": "For fuzzy title match, default is 4, set to 0 for no fuzzy match.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "6e126243833f375e0bab84f0c0014edb",
            "name": "Returns all Movie Certifications",
            "url": "httpsee.iva-api.com\/\/Movies\/MovieCertifications",
            "description": "Returns all Movie Certifications used in a movie response with the Releases object.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "6ee3b2df49bcc1b14884f8c0db8de170",
            "name": "\nReturns all Movie Genres.",
            "url": "httpsee.iva-api.com\/\/Movies\/MovieGenres",
            "description": "List of all movie genres used in the API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "a4e930490ef33890b0f3b4842480c6e5",
            "name": "Returns all Movie ReleaseTypes",
            "url": "httpsee.iva-api.com\/\/Movies\/ReleaseTypes",
            "description": "Release type refers to the release. **EX: Theatrical, Home Video, etc.**",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "1469780d4c79025b7b359fbcc021c0a3",
            "name": "Search and discover movies.",
            "url": "httpsee.iva-api.com\/\/Movies\/SearchAndDiscover",
            "description": "Searchable Fields:\nTitle, AlternateTitles, Genres, OriginalReleaseDate, UnitedStatesReleaseDate, GermanyReleaseDate, FranceReleaseDate, UnitedKingdomReleaseDate, ItalyReleaseDate, JapanReleaseDate, Tags, Cast, Directors, Descriptions, Ratings, OriginalLanguage.\n[Syntax Ref](https:\/\/docs.microsoft.com\/en-us\/rest\/api\/searchservice\/simple-query-syntax-in-azure-search)\n\nFilterable Fields:\nID, Title, AlternateTitles, Genres, OriginalReleaseDate, UnitedStatesReleaseDate, GermanyReleaseDate, FranceRele",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "term",
                    "description": "Term to search for. This can be combined with all other options. Use '*' to return any match.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SelectFields",
                    "description": "List of field names to be returned in the object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SearchFields",
                    "description": "List of field names to search using 'term.'",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Filter",
                    "description": "Expression to filter results.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "OrderBy",
                    "description": "List of field names to sort results.  Default is relevance.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Top",
                    "description": "Limit results.  Maximum returned is 1000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "IncludeTotalResultCount",
                    "description": "Includes total results in response. This will have a performance impact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SearchMode",
                    "description": "Specifies whether ANY or ALL of the search terms must be matched in order to count the item as a match.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "91c94aa1965ef062617efc5aa6481efa",
            "name": "Returns movie data for a specific IVA MovieId.",
            "url": "httpsee.iva-api.com\/\/Movies\/{Id}",
            "description": "By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.   \n\n\n`Subscriptions with \"Limited\" data will only be able to include basic title information and Videos.`  \n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "e73e7313b6967ef30ebf16003e9e8e5f",
            "name": "Gets all People.",
            "url": "httpsee.iva-api.com\/\/People\/All",
            "description": "Returns a AllPeopleResponse object containing a list of all poeple.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5942115e65b9663295c0b309a3358fd7",
            "name": "Find Person by Name ordered by rank.",
            "url": "httpsee.iva-api.com\/\/People\/RankedSearch\/",
            "description": "Find person using name ordered by rank.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "StartsWith",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "6feb19c84a629ff781742e9b84791d37",
            "name": "Returns information on a person.",
            "url": "httpsee.iva-api.com\/\/People\/{Id}",
            "description": "BETA - By default the API will only return basic People information. Additional objects can be included by passing the object in the Includes parameter.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "c36cee2041c834879ac312bf8f760fb3",
            "name": "Get a Person's Filmography.",
            "url": "httpsee.iva-api.com\/\/People\/{Id}\/Filmography",
            "description": "Requires a valid Person ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "bef7ca58b0dda093cc8827906645cd51",
            "name": "Returns a zip file of client SDK.",
            "url": "httpsee.iva-api.com\/\/SDKs\/{Client}",
            "description": "Generate and download SDK's for using the API.  Requires a subscription key for authorization and a valid client.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Client",
                    "description": "Client SDK",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "RedirectToFile",
                    "description": "Redirect to download the zipped SDK.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "bd8cddbd3cfca50326ee8c947d0d29fa",
            "name": "Returns a paged list of all TV shows.",
            "url": "httpsee.iva-api.com\/\/Shows\/All",
            "description": "By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter. \n\n\n`Subscriptions with \"Limited\" data will only be able to include basic title information, Videos, EpisodicVideos, and SeasonVideos.`",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "11e17c900d168dc242c8db41a27977f9",
            "name": "Get all AlternateIdTypes.",
            "url": "httpsee.iva-api.com\/\/Shows\/AlternateIdTypes",
            "description": "Alternate Id types refer to the 3rd party ID sets IVA data has matched.  **Ex: IMDB**",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "77d3b142fe7d75d881cc9da3bedb89f3",
            "name": "Perform a match to Entertainment using Title, Year, Cast and Director. Returns best match and score for the match.",
            "url": "httpsee.iva-api.com\/\/Shows\/Match\/",
            "description": "Use to match IVA show data to another data source using title, director, cast, etc.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Title",
                    "description": "Title of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AlternateTitles",
                    "description": "Alternate Titles of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Year",
                    "description": "Report year",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Cast",
                    "description": "Cast members of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Directors",
                    "description": "Directors of movie to be matched.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StringDistance",
                    "description": "For fuzzy title match, default is 4, set to 0 for no fuzzy match.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "4284437d396bfba574bb1e3d54156f4b",
            "name": "Returns a list of Show Release Types.",
            "url": "httpsee.iva-api.com\/\/Shows\/ReleaseTypes",
            "description": "Release types refer to the type of release and are used in the releases object for a show.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "252c663e7e8017d9a284ae85664eabf6",
            "name": "Search and discover shows.",
            "url": "httpsee.iva-api.com\/\/Shows\/SearchAndDiscover",
            "description": "Searchable Fields: Title, AlternateTitles, Genres, Tags, Cast, Directors, Descriptions, Ratings, OriginalLanguage. [Syntax Ref](https:\/\/docs.microsoft.com\/en-us\/rest\/api\/searchservice\/simple-query-syntax-in-azure-search)\n\nFilterable Fields: Id, Title, AlternateTitles, Genres, OriginalAirDate, Year, Tags, Cast, Directors, Descriptions, HasVideo, ImageFilePath, Ratings, OriginalLanguage, Created, Modified, NumberOfSeasons, NumberOfEpisodes. [Syntax Ref](https:\/\/docs.microsoft.com\/en-us\/rest\/api\/se",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "term",
                    "description": "Term to search for. This can be combined with all other options. Use '*' to return any match.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SelectFields",
                    "description": "List of field names to be returned in the object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SearchFields",
                    "description": "List of field names to search using 'term.'",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Filter",
                    "description": "Expression to filter results.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "OrderBy",
                    "description": "List of field names to sort results.  Default is relevance.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Top",
                    "description": "Limit results.  Maximum returned is 1000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "IncludeTotalResultCount",
                    "description": "Includes total results in response. This will have a performance impact.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SearchMode",
                    "description": "Specifies whether ANY or ALL of the search terms must be matched in order to count the item as a match.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "9ae737b78beb297fc22883dee6118891",
            "name": "Get Season by ShowId and Season Number.",
            "url": "httpsee.iva-api.com\/\/Shows\/Season\/",
            "description": "Use the IVA ShowId and a season number to get a season details and video asset data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SeasonNumber",
                    "description": "Number of season.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "ad5a3f81e6cdb835b2bcd66090e81b37",
            "name": "Get Episode by ShowId, Season Number and Episode Number.",
            "url": "httpsee.iva-api.com\/\/Shows\/Seasons\/Episode\/",
            "description": "Some use cases find it useful to be able to pass a season number and episode number of a known show to get the data for that exact episode.  ",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SeasonNumber",
                    "description": "Number of season.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EpisodeNumber",
                    "description": "Required EpisodeNumber.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "0bdde982771d5baab347f94b51536a4d",
            "name": "Returns an Episode object for a requested Episode ID.",
            "url": "httpsee.iva-api.com\/\/Shows\/Seasons\/Episodes\/{Id}",
            "description": "Returns the episode details for a specific episode ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5bf98f44c4dfc306c121ecb36bd0277b",
            "name": "Get Season by SeasonId.",
            "url": "httpsee.iva-api.com\/\/Shows\/Seasons\/{Id}",
            "description": "Use with a SeasonId to return details for a season including any video asset data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "7197de34313bf46ccb57fbc7822ad9a9",
            "name": "Returns a list of Show Certifications.",
            "url": "httpsee.iva-api.com\/\/Shows\/ShowCertifications",
            "description": "List of Show Certifications and definitions.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "75bcfbbcf64f135ea04bc200cf148fe6",
            "name": "Get all Show Genres.",
            "url": "httpsee.iva-api.com\/\/Shows\/ShowGenres",
            "description": "Returns a list of all the show genres used in the IVA database.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "380bf807aa3557f23f7e07e3cc9428d1",
            "name": "Get Show by Show ID.",
            "url": "httpsee.iva-api.com\/\/Shows\/{Id}",
            "description": "By default the API will only return basic title information. Additional objects can be included by passing the object in the Includes parameter.  \n\n\n`Subscriptions with \"Limited\" data will only be able to include basic title information, Videos, EpisodicVideos, and SeasonVideos.`",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "c63a840ab007d833942b07b3ae4b9407",
            "name": "Get Season by ShowId and Season Number.",
            "url": "httpsee.iva-api.com\/\/Shows\/{Id}\/Seasons\/{SeasonNumber}",
            "description": "Depreciated. Use GetSeasonBySeasonNumber instead.  Requires a valid ShowId and Season Number.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SeasonNumber",
                    "description": "Number of a Season belonging to a Show.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "d048b0971852fc9edacceec4cd0d994a",
            "name": "Get Episode by ShowId, Season Number and Episode Number.",
            "url": "httpsee.iva-api.com\/\/Shows\/{Id}\/Seasons\/{SeasonNumber}\/Episodes\/{EpisodeNumber}",
            "description": "Requires a valid ShowId, Season Number and Episode Number.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SeasonNumber",
                    "description": "Number of a Season belonging to a Show.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EpisodeNumber",
                    "description": "Required EpisodeNumber.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "f76554455ed71f9d2955d17d3baa071d",
            "name": "Returns translated time from IVA or an error if invalid.",
            "url": "httpsee.iva-api.com\/\/Tests\/TestDateTime\/",
            "description": "Entertainment Express APIs use date time format ISO 8601.  Use this API to test your date time format to see if it translates to a valid time on our server.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "DateTime",
                    "description": "DateTime to test format from API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "e73aae4b997485a193a8aef352907290",
            "name": "Returns list of all US Theatrical Movie objects.",
            "url": "httpsee.iva-api.com\/\/TheatricalMovies\/",
            "description": "Deprecated. Use \/Movies\/InTheaters or \/Movies\/ComingSoon instead. Returns all movies with a US Theatrical Release Date > today - 60 days.  Use the includes parameter to include additional objects related to the movie.  The includes parameter takes a comma separated list of objects.  **EX: Genres,Descriptions,Videos**    \n\n\n\n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Skip",
                    "description": "Offset for paging. Default is 0.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Take",
                    "description": "Maximum number of rows returned. Default is 1,000.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Includes",
                    "description": "List of additional objects to include in the movie object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "60318929695641066cffebe4e061de7b",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/genres\/movies",
            "description": "Gets list of movie genres.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "e7b0d8c6d184f4c9ed67e29bd147aa33",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/genres\/shows",
            "description": "Gets list of show genres.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "6fd16ca18d0afcb0a7f3d003d8b5c424",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/genres\/sports",
            "description": "Gets list of sports genres.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "27ddea563d4a3a0c082b27a61e81d6a5",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/leagues",
            "description": "Gets list of sports leagues.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "e21d67b3a32f8db1cfd9c755b1233d57",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/leagues\/{LeagueID}\/listings",
            "description": "Retrieve listings for a given leagueID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LeagueID",
                    "description": "League ID. See \/leagues for a list of all available sports leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupID",
                    "description": "Lineup ID. Lineups can be found through the \/TvMedia\/lineups method.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TimeZone",
                    "description": "Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+\/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Channel",
                    "description": "Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeChan",
                    "description": "Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StartChan",
                    "description": "Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EndChan",
                    "description": "Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the 'maxchan' parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Station",
                    "description": "Filter by station ID. Array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeStation",
                    "description": "Filter out station IDs; array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Search",
                    "description": "search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ShowType",
                    "description": "Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeShowType",
                    "description": "Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportType",
                    "description": "Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see \/genres\/sports.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "League",
                    "description": "Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see \/leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Team",
                    "description": "Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see \/leagues\/teams. (NOTE: league parameter is required when using this parameter).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NotYetStarted",
                    "description": "Only displays listings which are starting on or after the given start time. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportEventsOnly",
                    "description": "Get sporting events only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DescriptiveVideoOnly",
                    "description": "Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LiveOnly",
                    "description": "Only displays live listings. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NewShowsOnly",
                    "description": "Get new shows only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdultContent",
                    "description": "Defaults to 1 (allowed). Set to 0 to hide adult content.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DisplayArtwork",
                    "description": "Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "ce73e61ce1a17bb14691d21bb27e0713",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/leagues\/{LeagueID}\/teams",
            "description": "Gets list of teams in a league.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LeagueID",
                    "description": "League ID. See \/leagues for a list of all available sports leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "fbf3cfe5b76b0122781fa6d5ff06bb07",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups",
            "description": "Get lineups by postal code.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "PostalCode",
                    "description": "Postal code. Longitude\/Latitude not required if passed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupType",
                    "description": "Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ProviderId",
                    "description": "Filter by provider ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "34d1d58eb42f5fec1d4fb809666de05c",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/browse",
            "description": "Starting point for lineup browser, returns available countries.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "163681c57a150d52a43375742e353c57",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/browse\/{CountryID}",
            "description": "Browse regions by country.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "CountryID",
                    "description": "Country abbreviation. See TvMedia\/lineups\/browse for a list of supported countries.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "9a736dbdd4b161ef8135d672f5505b45",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/browse\/{CountryID}\/{RegionID}",
            "description": "Get service areas for a specific country and region.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "CountryID",
                    "description": "Country abbreviation. See TvMedia\/lineups\/browse for a list of supported countries.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "RegionID",
                    "description": "Region abbreviation. See TvMedia\/lineups\/browse\/{CountryID} for a list of regions.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "67da88c552d094eb2aaba72d9208b27b",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/browse\/{CountryID}\/{RegionID}\/{AreaID}",
            "description": "Get lineups by AreaID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "CountryID",
                    "description": "Country abbreviation. See TvMedia\/lineups\/browse for a list of supported countries.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "RegionID",
                    "description": "Region abbreviation. See TvMedia\/lineups\/browse\/{CountryID} for a list of regions.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AreaID",
                    "description": "Service area ID. See TvMedia\/lineups\/browse\/{CountryID}\/{RegionID} for a list of service areas.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupType",
                    "description": "Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ProviderId",
                    "description": "Filter by provider ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "d49603ec8af3c6f31ba05122e5dcb078",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/geo",
            "description": "Get lineups by latitude and longitude.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Latitude",
                    "description": "Latitude coordinate. Used in conjunction with Longitude. Postal code not required if passed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Longitude",
                    "description": "Longitude coordinate. Used in conjunction with Latitude. Postal code not required if passed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupType",
                    "description": "Filter by lineup type, valid types are OTA, SAT, CAB, IPTV.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ProviderId",
                    "description": "Filter by provider ID",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "e2c18c6a5050bec741de87716546188d",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/{LineupID}",
            "description": "Get lineups by specific LineupID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupID",
                    "description": "Lineup ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "300fd75e7b385c9da836f140f9016976",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/{LineupID}\/listings",
            "description": "Retrieve individual listings for a given lineup ordered by start time (listDateTime) and channel number; unless using the search parameter, in which case they will be ordered by search term relevance.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupID",
                    "description": "Lineup ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TimeZone",
                    "description": "Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+\/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Channel",
                    "description": "Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeChan",
                    "description": "Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StartChan",
                    "description": "Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EndChan",
                    "description": "Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the 'maxchan' parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Station",
                    "description": "Filter by station ID. Array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeStation",
                    "description": "Filter out station IDs; array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Search",
                    "description": "search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ShowType",
                    "description": "Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeShowType",
                    "description": "Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportType",
                    "description": "Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see \/genres\/sports.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "League",
                    "description": "Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see \/leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Team",
                    "description": "Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see \/leagues\/teams. (NOTE: league parameter is required when using this parameter).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NotYetStarted",
                    "description": "Only displays listings which are starting on or after the given start time. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportEventsOnly",
                    "description": "Get sporting events only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DescriptiveVideoOnly",
                    "description": "Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LiveOnly",
                    "description": "Only displays live listings. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NewShowsOnly",
                    "description": "Get new shows only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdultContent",
                    "description": "Defaults to 1 (allowed). Set to 0 to hide adult content.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DisplayArtwork",
                    "description": "Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "16119d752c837b2cf4949bcd004c51e7",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/{LineupID}\/listings\/grid",
            "description": "A collection of listings grouped by channel and ordered by listDateTime. The grid dimensions ( time x channels ) can be modified by using the start, end, startchan and maxchan parameters. Channels without any listings will be returned with an empty listings collection.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupID",
                    "description": "Lineup ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TimeZone",
                    "description": "Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+\/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Channel",
                    "description": "Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeChan",
                    "description": "Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StartChan",
                    "description": "Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EndChan",
                    "description": "Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the 'maxchan' parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Station",
                    "description": "Filter by station ID. Array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeStation",
                    "description": "Filter out station IDs; array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Search",
                    "description": "search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ShowType",
                    "description": "Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeShowType",
                    "description": "Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportType",
                    "description": "Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see \/genres\/sports.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "League",
                    "description": "Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see \/leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Team",
                    "description": "Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see \/leagues\/teams. (NOTE: league parameter is required when using this parameter).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NotYetStarted",
                    "description": "Only displays listings which are starting on or after the given start time. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportEventsOnly",
                    "description": "Get sporting events only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DescriptiveVideoOnly",
                    "description": "Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LiveOnly",
                    "description": "Only displays live listings. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NewShowsOnly",
                    "description": "Get new shows only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdultContent",
                    "description": "Defaults to 1 (allowed). Set to 0 to hide adult content.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DisplayArtwork",
                    "description": "Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "736c5666c6a39b1b7cceb2dc2fe96e3e",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/lineups\/{LineupID}\/listings\/highlights",
            "description": "Retrieves featured listings. setting a start and\/or end time for every request is a highly recommended.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupID",
                    "description": "Lineup ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TimeZone",
                    "description": "Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+\/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Channel",
                    "description": "Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeChan",
                    "description": "Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StartChan",
                    "description": "Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EndChan",
                    "description": "Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the 'maxchan' parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Station",
                    "description": "Filter by station ID. Array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeStation",
                    "description": "Filter out station IDs; array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Search",
                    "description": "search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ShowType",
                    "description": "Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeShowType",
                    "description": "Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportType",
                    "description": "Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see \/genres\/sports.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "League",
                    "description": "Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see \/leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Team",
                    "description": "Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see \/leagues\/teams. (NOTE: league parameter is required when using this parameter).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NotYetStarted",
                    "description": "Only displays listings which are starting on or after the given start time. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportEventsOnly",
                    "description": "Get sporting events only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DescriptiveVideoOnly",
                    "description": "Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LiveOnly",
                    "description": "Only displays live listings. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NewShowsOnly",
                    "description": "Get new shows only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdultContent",
                    "description": "Defaults to 1 (allowed). Set to 0 to hide adult content.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DisplayArtwork",
                    "description": "Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "b27bb2551399db7c290a1969d1152d9b",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/reference\/lineups",
            "description": "Get list of generic lineup IDs that can be used.  A 'generic' lineup is not a real lineup, but a collection of stations defined by TV Media.  Any listing retrieved using a generic lineup will not return any channel number information, as it is irrelevant.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5079c8f5cc4a1780d615c8d2f9184e39",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/stations\/{StationID}",
            "description": "Gets station details by ID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StationID",
                    "description": "Station ID. Station ID's can be found in listings, or by using the Tvmedia\/lineups API",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "fcdeeafe74108f794c8ce1a6570ece88",
            "name": "Stations are not tied to lineups, therefore no channel numbers will be present in the response, unlike most other listing operations.",
            "url": "httpsee.iva-api.com\/\/TvMedia\/stations\/{StationID}\/listings",
            "description": "Get listings for a given station.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StationID",
                    "description": "Station ID. Station ID's can be found in listings, or by using the Tvmedia\/lineups API",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TimeZone",
                    "description": "Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+\/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Channel",
                    "description": "Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeChan",
                    "description": "Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StartChan",
                    "description": "Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EndChan",
                    "description": "Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the 'maxchan' parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Station",
                    "description": "Filter by station ID. Array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeStation",
                    "description": "Filter out station IDs; array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Search",
                    "description": "search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ShowType",
                    "description": "Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeShowType",
                    "description": "Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportType",
                    "description": "Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see \/genres\/sports.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "League",
                    "description": "Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see \/leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Team",
                    "description": "Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see \/leagues\/teams. (NOTE: league parameter is required when using this parameter).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NotYetStarted",
                    "description": "Only displays listings which are starting on or after the given start time. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportEventsOnly",
                    "description": "Get sporting events only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DescriptiveVideoOnly",
                    "description": "Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LiveOnly",
                    "description": "Only displays live listings. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NewShowsOnly",
                    "description": "Get new shows only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdultContent",
                    "description": "Defaults to 1 (allowed). Set to 0 to hide adult content.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DisplayArtwork",
                    "description": "Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "b6e4272f497ba11698ac145279c65181",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/teams\/{TeamID}",
            "description": "Gets details for a specific team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TeamID",
                    "description": "Team ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "5e7075559a99757c1595c2e50861a3c9",
            "name": "",
            "url": "httpsee.iva-api.com\/\/TvMedia\/teams\/{TeamID}\/listings",
            "description": "Retrieve listings for a given TeamID.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "TvMediaApiKey",
                    "description": "API Key supplied by TvMedia.ca",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TeamID",
                    "description": "Team ID.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LineupID",
                    "description": "Lineup ID. Lineups can be found through the \/TvMedia\/lineups method.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "TimeZone",
                    "description": "Set a timezone or time offset for listing times (listDateTime property). Defaults to UTC, accepts time offsets (+\/-HH:MM) or named time zones (see IANA Time Zone Database). If an invalid value is set, listDateTime will be returned as empty. NOTE: this parameter does not affect input values; start and end times must still be provided in UTC.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Channel",
                    "description": "Include only channel(s) with this number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property , NOT channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeChan",
                    "description": "Exclude channels by number, single or array values accepted. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1 (use the channel.number property, NOT the channel.channelNumber property).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "StartChan",
                    "description": "Lowest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "EndChan",
                    "description": "Highest channel. sub channel numbers can be hyphenated to the end of the string: e.g. 1-2 for sub channel 2 of channel 1. In general this parameter should rarely be used, for shaping the grid size see the 'maxchan' parameter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Station",
                    "description": "Filter by station ID. Array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeStation",
                    "description": "Filter out station IDs; array or single value accepted. Station ID's can be found in listings, or by using the \/lineups API.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Search",
                    "description": "search value: can be a show, episode, movie, team, league, person, etc. Results will be sorted by relevance rather than time.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ShowType",
                    "description": "Include only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ExcludeShowType",
                    "description": "Exclude only these show type ID(s), array or single values accepted. Must be URL encoded. For a list of possible show type's and their ID's see \/genres\/shows, or the showTypeID property of a listing object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Id",
                    "description": "Required third party ID of Movie.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportType",
                    "description": "Get only sports listings of type sportTypeID. Array or single values accepted. For a list of possible values see \/genres\/sports.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "League",
                    "description": "Get only sports listings in the given league ID(s). Array or single values accepted. For a list of possible values see \/leagues.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Team",
                    "description": "Filter by teams playing by name(teams.longName). Array or single values accepted, for a list of possible values see \/leagues\/teams. (NOTE: league parameter is required when using this parameter).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NotYetStarted",
                    "description": "Only displays listings which are starting on or after the given start time. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "SportEventsOnly",
                    "description": "Get sporting events only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DescriptiveVideoOnly",
                    "description": "Only displays listings which are flagged as being broadcast with Descriptive Video. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "LiveOnly",
                    "description": "Only displays live listings. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "NewShowsOnly",
                    "description": "Get new shows only. No value necessary.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "AdultContent",
                    "description": "Defaults to 1 (allowed). Set to 0 to hide adult content.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "DisplayArtwork",
                    "description": "Displays the Artwork information. Set to 1 to include, 1 is default. 0 to hide (will improve performance).",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Detail",
                    "description": "Set level of detail for response. values are 'full' or 'brief', defaults to 'full'. 'full' will include all properties, 'brief' will exclude optional properties.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "2342d40b6068056378a2e2d738f6505e",
            "name": "Returns a URL to a requested video.",
            "url": "httpsee.iva-api.com\/\/Videos\/GetVideo\/{Id}",
            "description": "Returns a URL to the requested video. [Video Format Specs](https:\/\/developer.iva-api.com\/docs\/v1\/video-formats)\n\n**Formats:** MP4 = 4, HLS = 11, Dash = 14, HSS = 12, HDS = 13\n\n**MP4 KbRate:** 80, 212, 450, 750, 1500, 2500(HD sources only), 5000 (sources >=  1080p)  \n\n**Adaptive Min\/Max rate:** 212000, 350000, 600000, 1200000, 2000000, 2500000, 3500000  \n\n `URLs requested with a Demo account will always return max 750 kbps video.  Full commercial account required for higher bitrates.`",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "Id",
                    "description": "Required ID of Entertainment Episode.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Format",
                    "description": "Video format.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "KbRate",
                    "description": "Video bitrate required for MP4 content.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Expires",
                    "description": "UTC Time to video link should expire. ISO 8601 Format: yyyy-mm-dd hh:mm:ss.ffffff0Z",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ReportTag",
                    "description": "Report Tag filter.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Start",
                    "description": "Report start date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "End",
                    "description": "Report end date",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "MinRate",
                    "description": "Adaptive Maximum rate.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "MaxRate",
                    "description": "Adaptive Minimum rate.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        },
        {
            "id": "e7c36edce1e4faede8c44cb663a1b46c",
            "name": "Returns a list of recommendations from XRoadMedia for a movie or show.",
            "url": "httpsee.iva-api.com\/\/XroadMedia\/recommendations",
            "description": "Get recommendations for movie or show.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "MovieId",
                    "description": "Source MovieId for recommendations.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "ShowId",
                    "description": "Source ShowId for recommendations.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "Type",
                    "description": "Type of recommendation response.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "2ea05fee840f4065496abb9314526422",
            "rawModeData": ""
        }
    ]
}